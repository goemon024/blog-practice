create table public.users (
  id uuid not null default gen_random_uuid (),
  username text not null,
  email text not null,
  image_path text null,
  updated_at timestamp without time zone null default CURRENT_TIMESTAMP,
  created_at timestamp with time zone not null default CURRENT_TIMESTAMP,
  constraint users_pkey primary key (id),
  constraint users_id_fkey foreign KEY (id) references auth.users (id) on update CASCADE on delete CASCADE
) TABLESPACE pg_default;

create unique INDEX IF not exists users_name_key on public.users using btree (username) TABLESPACE pg_default;

create unique INDEX IF not exists users_email_key on public.users using btree (email) TABLESPACE pg_default;




create table public.categories (
  id bigserial not null,
  name text not null,
  updated_at timestamp without time zone not null default CURRENT_TIMESTAMP,
  created_at timestamp with time zone not null default CURRENT_TIMESTAMP,
  constraint categories_pkey primary key (id)
) TABLESPACE pg_default;

create unique INDEX IF not exists categories_id_key on public.categories using btree (id) TABLESPACE pg_default;



create table public.posts (
  id bigserial not null,
  user_id uuid not null,
  category_id bigint not null,
  title text not null,
  content text not null,
  image_path text null,
  created_at timestamp with time zone null,
  updated_ad timestamp without time zone null default CURRENT_TIMESTAMP,
  constraint posts_pkey primary key (id),
  constraint posts_category_id_fkey foreign KEY (category_id) references categories (id) on update CASCADE on delete CASCADE,
  constraint posts_user_id_fkey foreign KEY (user_id) references users (id) on update CASCADE on delete CASCADE
) TABLESPACE pg_default;

create unique INDEX IF not exists posts_id_key on public.posts using btree (id) TABLESPACE pg_default;



create table public.comment (
  id bigserial not null,
  user_id uuid not null default gen_random_uuid (),
  post_id bigint not null,
  content text not null,
  created_at timestamp without time zone not null default CURRENT_TIMESTAMP,
  updated_at timestamp with time zone null default CURRENT_TIMESTAMP,
  constraint comment_pkey primary key (id),
  constraint comment_post_id_fkey foreign KEY (post_id) references posts (id) on update CASCADE on delete CASCADE,
  constraint comment_user_id_fkey foreign KEY (user_id) references users (id) on update CASCADE on delete CASCADE
) TABLESPACE pg_default;

create unique INDEX IF not exists comment_id_key on public.comment using btree (id) TABLESPACE pg_default;



INSERT INTO categories (id, name)
VALUES (9,'    ');
INSERT INTO categories (id, name)
VALUES (1,'food');
INSERT INTO categories (id, name)
VALUES (2,'health');
INSERT INTO categories (id, name)
VALUES (3,'technology');

